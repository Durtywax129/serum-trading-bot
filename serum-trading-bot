const { Connection, Keypair, Transaction, PublicKey } = require('@solana/web3.js');
const { Market, OpenOrders } = require('@project-serum/serum');
const { TOKEN_PROGRAM_ID } = require('@solana/spl-token');

// Connect to the Solana network
const connection = new Connection("https://api.mainnet-beta.solana.com");

// Your Phantom Wallet private key (ensure you replace with the correct key)
const privateKey = Uint8Array.from([3W6gLR4XMR7FK8YwCYD6bQstCk78A94DKKBwGj1tq1a9xKbGgvF7EgdBguveA1YPSszGnZ82r5aAzkm2HuYei6T6]);

const wallet = Keypair.fromSecretKey(privateKey);

async function placeOrder() {
    const marketAddress = new PublicKey('3UEmjbNapSKd7RRR7nUE9fPohMaCVf4t8HiUjmzGpump'); // Example market address
    const market = await Market.load(connection, marketAddress, {}, TOKEN_PROGRAM_ID);
    
    // Example: Place a buy order for $NUKE at a price of 0.0001 SOL
    const order = await market.placeOrder(
        connection,
        wallet,
        'buy', // 'buy' or 'sell'
        0.1,   // Quantity (in $NUKE tokens you want to buy)
        0.0001, // Price per token in SOL
        'limit' // Order type: 'limit' or 'market'
    );

    console.log("Order placed: ", order);
}
